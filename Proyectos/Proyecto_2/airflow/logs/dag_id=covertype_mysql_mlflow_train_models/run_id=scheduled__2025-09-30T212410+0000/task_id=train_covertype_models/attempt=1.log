{"timestamp":"2025-09-30T21:29:47.725553","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-30T21:29:47.726809","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ETL_Training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-30T21:29:51.296984Z","level":"info","event":"[INFO] batch_number from context: 1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.369144","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T21:29:51.579509","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-09-30T21:29:51.582855","level":"info","event":"Connection Retrieved 'mysql_trn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-30T21:29:51.583263","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T21:29:51.613834","level":"warning","event":"/opt/airflow/dags/ETL_Training.py:273: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T21:29:51.622310Z","level":"info","event":"[TRAIN] Loaded 412 samples from covertype_clean","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.623162Z","level":"info","event":"[TRAIN] Features shape: (412, 12)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.624473Z","level":"info","event":"[TRAIN] Target distribution:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.624944Z","level":"info","event":"cover_type","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.625574Z","level":"info","event":"0     19","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.626008Z","level":"info","event":"1     31","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.626467Z","level":"info","event":"2     85","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.626874Z","level":"info","event":"3    113","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.627323Z","level":"info","event":"4     34","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.627780Z","level":"info","event":"5    129","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.628204Z","level":"info","event":"6      1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.628687Z","level":"info","event":"Name: count, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T21:29:51.625998","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ValueError","exc_value":"The least populated class in y has only 1 member, which is too few. The minimum number of groups for any class cannot be less than 2.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/ETL_Training.py","lineno":292,"name":"train_covertype_models"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/utils/_param_validation.py","lineno":213,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/model_selection/_split.py","lineno":2681,"name":"train_test_split"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/model_selection/_split.py","lineno":1749,"name":"split"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/model_selection/_split.py","lineno":2150,"name":"_iter_indices"}],"is_group":false,"exceptions":[]}]}
