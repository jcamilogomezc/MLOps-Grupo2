{"timestamp":"2025-09-30T20:20:20.216208","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-30T20:20:20.217344","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ETL_Training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-30T20:20:23.311098Z","level":"info","event":"[INFO] batch_number from context: 1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.410917","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:20:23.661686","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-09-30T20:20:23.664908","level":"info","event":"Connection Retrieved 'mysql_trn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-30T20:20:23.665158","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T20:20:23.687941","level":"warning","event":"/opt/airflow/dags/ETL_Training.py:252: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:20:23.702625Z","level":"info","event":"[TRAIN] Loaded 607 samples from covertype_clean","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.703699Z","level":"info","event":"[TRAIN] Features shape: (607, 12)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.705471Z","level":"info","event":"[TRAIN] Target distribution:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.706034Z","level":"info","event":"cover_type","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.706487Z","level":"info","event":"0     39","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.706922Z","level":"info","event":"1     21","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.707333Z","level":"info","event":"2    130","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.707730Z","level":"info","event":"3    153","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.708198Z","level":"info","event":"4     60","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.708582Z","level":"info","event":"5    194","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.708957Z","level":"info","event":"6     10","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.709363Z","level":"info","event":"Name: count, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:23.710084Z","level":"info","event":"[TRAIN] Training logreg...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:32.632307Z","level":"error","event":"2025/09/30 20:20:32 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.141799Z","level":"error","event":"\u001b[31m2025/09/30 20:20:41 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.785039Z","level":"info","event":"[TRAIN] Model logreg logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.785700Z","level":"info","event":"[TRAIN] logreg - Accuracy: 0.7049, F1-macro: 0.7106, Run ID: 43e9563aea654e4585dc10cffe2651e3","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.843506Z","level":"info","event":"🏃 View run bn1_logreg at: http://mlflow:5000/#/experiments/1/runs/43e9563aea654e4585dc10cffe2651e3","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.844246Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:41.934585Z","level":"info","event":"[TRAIN] Training rf...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.215381Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.216122Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.234357Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.234833Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.235307Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:43.235917Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:51.894922Z","level":"error","event":"2025/09/30 20:20:51 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:58.696464Z","level":"error","event":"\u001b[31m2025/09/30 20:20:58 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:20:59.242345Z","level":"info","event":"[TRAIN] Model rf logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:59.243061Z","level":"info","event":"[TRAIN] rf - Accuracy: 0.7951, F1-macro: 0.7204, Run ID: 62090ac654c2424a9f5be3626bd07dbc","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:59.301766Z","level":"info","event":"🏃 View run bn1_rf at: http://mlflow:5000/#/experiments/1/runs/62090ac654c2424a9f5be3626bd07dbc","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:59.302307Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:20:59.394751Z","level":"info","event":"[TRAIN] Training svc...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.545050Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.546069Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.549233Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.549840Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.551222Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:00.551769Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:07.594818Z","level":"error","event":"2025/09/30 20:21:07 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:14.863212Z","level":"error","event":"\u001b[31m2025/09/30 20:21:14 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:15.466250Z","level":"info","event":"[TRAIN] Model svc logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:15.466864Z","level":"info","event":"[TRAIN] svc - Accuracy: 0.7295, F1-macro: 0.6664, Run ID: a6d2b41a1a9f4b2cbd2b95302b4bb5f1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:15.525221Z","level":"info","event":"🏃 View run bn1_svc at: http://mlflow:5000/#/experiments/1/runs/a6d2b41a1a9f4b2cbd2b95302b4bb5f1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:15.525921Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:15.616083Z","level":"info","event":"[TRAIN] Training knn...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.650211Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.650800Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.653101Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.653675Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.654536Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:16.655064Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:24.096301Z","level":"error","event":"2025/09/30 20:21:24 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:31.566578Z","level":"error","event":"\u001b[31m2025/09/30 20:21:31 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.189602Z","level":"info","event":"[TRAIN] Model knn logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.191268Z","level":"info","event":"[TRAIN] knn - Accuracy: 0.6639, F1-macro: 0.6267, Run ID: a15a42a5b6a947fd8e4e4df61fe96ce9","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.333595Z","level":"info","event":"🏃 View run bn1_knn at: http://mlflow:5000/#/experiments/1/runs/a15a42a5b6a947fd8e4e4df61fe96ce9","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.334312Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.425492Z","level":"info","event":"[TRAIN] Training adaboost...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.692645Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:32.693998Z","level":"error","event":"  warnings.warn(","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.261541Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.263556Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.301395Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.302955Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.304318Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:34.305686Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:41.929494Z","level":"error","event":"2025/09/30 20:21:41 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:49.390771Z","level":"error","event":"\u001b[31m2025/09/30 20:21:49 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:49.972313Z","level":"info","event":"[TRAIN] Model adaboost logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:49.973029Z","level":"info","event":"[TRAIN] adaboost - Accuracy: 0.4590, F1-macro: 0.3078, Run ID: fb28d327d4944a5e871b24535e19ecec","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:50.047792Z","level":"info","event":"🏃 View run bn1_adaboost at: http://mlflow:5000/#/experiments/1/runs/fb28d327d4944a5e871b24535e19ecec","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:50.048576Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:50.255355Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:51.726040Z","level":"error","event":"2025/09/30 20:21:51 WARNING mlflow.tracking._model_registry.fluent: Run with id 62090ac654c2424a9f5be3626bd07dbc has no artifacts at artifact path 'model', registering model based on models:/m-bc7db96218374f6fa626cf61f4e43032 instead","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:52.001791Z","level":"error","event":"2025/09/30 20:21:52 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 3","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:52.022736Z","level":"error","event":"Created version '3' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:21:52.169277Z","level":"info","event":"[REGISTRY] Best model 'rf' registered as version 3 (Run ID: 62090ac654c2424a9f5be3626bd07dbc)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.039487Z","level":"info","event":"🏃 View run bn1_model_comparison at: http://mlflow:5000/#/experiments/1/runs/50566e562eaa40128fd21fe4051c2604","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.040073Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.133361Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.133961Z","level":"info","event":"[METRICS] Model Performance Summary:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.136135Z","level":"info","event":"   model  accuracy  f1_macro  train_size  test_size                           run_id","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.136651Z","level":"info","event":"      rf  0.795082  0.720377         485        122 62090ac654c2424a9f5be3626bd07dbc","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.137066Z","level":"info","event":"  logreg  0.704918  0.710598         485        122 43e9563aea654e4585dc10cffe2651e3","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.137517Z","level":"info","event":"     svc  0.729508  0.666407         485        122 a6d2b41a1a9f4b2cbd2b95302b4bb5f1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.137984Z","level":"info","event":"     knn  0.663934  0.626691         485        122 a15a42a5b6a947fd8e4e4df61fe96ce9","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.138479Z","level":"info","event":"adaboost  0.459016  0.307831         485        122 fb28d327d4944a5e871b24535e19ecec","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.138986Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.139415Z","level":"info","event":"[BEST] rf (f1_macro=0.7204) registered to model registry","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.139851Z","level":"info","event":"[BEST] Run ID: 62090ac654c2424a9f5be3626bd07dbc","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:21:53.137786","level":"info","event":"Done. Returned value was: {'best_model': 'rf', 'best_f1_score': 0.7203773940839852, 'best_run_id': '62090ac654c2424a9f5be3626bd07dbc', 'total_models_trained': 5, 'metrics': [{'model': 'rf', 'accuracy': 0.7950819672131147, 'f1_macro': 0.7203773940839852, 'train_size': 485, 'test_size': 122, 'run_id': '62090ac654c2424a9f5be3626bd07dbc'}, {'model': 'logreg', 'accuracy': 0.7049180327868853, 'f1_macro': 0.7105975723622783, 'train_size': 485, 'test_size': 122, 'run_id': '43e9563aea654e4585dc10cffe2651e3'}, {'model': 'svc', 'accuracy': 0.7295081967213115, 'f1_macro': 0.6664071476800247, 'train_size': 485, 'test_size': 122, 'run_id': 'a6d2b41a1a9f4b2cbd2b95302b4bb5f1'}, {'model': 'knn', 'accuracy': 0.6639344262295082, 'f1_macro': 0.6266905269570514, 'train_size': 485, 'test_size': 122, 'run_id': 'a15a42a5b6a947fd8e4e4df61fe96ce9'}, {'model': 'adaboost', 'accuracy': 0.45901639344262296, 'f1_macro': 0.30783095847034464, 'train_size': 485, 'test_size': 122, 'run_id': 'fb28d327d4944a5e871b24535e19ecec'}]}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-30T20:21:53.138072","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01999c48-2de4-7ad0-8797-e2a205260ca1'), task_id='train_covertype_models', dag_id='covertype_mysql_mlflow_train_models', run_id='scheduled__2025-09-30T20:15:00+00:00', try_number=1, map_index=-1, hostname='5b92881ec6ca', context_carrier={}, task=<Task(PythonOperator): train_covertype_models>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 30, 20, 20, 19, 873479, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/covertype_mysql_mlflow_train_models/runs/scheduled__2025-09-30T20%3A15%3A00%2B00%3A00/tasks/train_covertype_models?try_number=1')","logger":"task"}
