{"timestamp":"2025-09-30T18:10:22.050711","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-30T18:10:22.051517","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ETL_Training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-30T18:10:24.835873Z","level":"info","event":"[INFO] batch_number from context: 2","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:24.922832","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T18:10:25.082051","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-09-30T18:10:25.085145","level":"info","event":"Connection Retrieved 'mysql_trn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-30T18:10:25.085346","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T18:10:25.116195","level":"warning","event":"/opt/airflow/dags/ETL_Training.py:252: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T18:10:25.141281Z","level":"info","event":"[TRAIN] Loaded 1273 samples from covertype_clean","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.143464Z","level":"info","event":"[TRAIN] Features shape: (1273, 12)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.149683Z","level":"info","event":"[TRAIN] Target distribution:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.153404Z","level":"info","event":"cover_type","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.154766Z","level":"info","event":"0    258","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.155398Z","level":"info","event":"1    122","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.155907Z","level":"info","event":"2    161","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.156493Z","level":"info","event":"4    231","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.157047Z","level":"info","event":"5    169","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.157547Z","level":"info","event":"6    332","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.158110Z","level":"info","event":"Name: count, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:25.163486Z","level":"info","event":"[TRAIN] Training logreg...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:34.625292Z","level":"error","event":"2025/09/30 18:10:34 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:10:51.049492Z","level":"error","event":"\u001b[31m2025/09/30 18:10:51 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:10:52.869617Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.157320Z","level":"error","event":"2025/09/30 18:10:53 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 6","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.159525Z","level":"error","event":"Created version '6' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.342969Z","level":"info","event":"[TRAIN] Model logreg logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.343623Z","level":"info","event":"[TRAIN] logreg - Accuracy: 0.8078, F1-macro: 0.7669","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.420696Z","level":"info","event":"🏃 View run bn2_logreg at: http://mlflow:5000/#/experiments/1/runs/c93d124614254762b2759afd33998a11","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.421337Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:10:53.521254Z","level":"info","event":"[TRAIN] Training rf...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:02.213471Z","level":"error","event":"2025/09/30 18:11:02 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:11.822770Z","level":"error","event":"\u001b[31m2025/09/30 18:11:11 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:12.628151Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:12.792227Z","level":"error","event":"2025/09/30 18:11:12 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 7","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:12.794177Z","level":"error","event":"Created version '7' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:12.957443Z","level":"info","event":"[TRAIN] Model rf logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:12.957936Z","level":"info","event":"[TRAIN] rf - Accuracy: 0.9451, F1-macro: 0.9322","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:13.019156Z","level":"info","event":"🏃 View run bn2_rf at: http://mlflow:5000/#/experiments/1/runs/352e6224474d474cbc0700075f5e5fd8","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:13.023612Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:13.120103Z","level":"info","event":"[TRAIN] Training svc...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:22.644180Z","level":"error","event":"2025/09/30 18:11:22 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:31.856976Z","level":"error","event":"\u001b[31m2025/09/30 18:11:31 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:32.525319Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:32.712569Z","level":"error","event":"2025/09/30 18:11:32 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 8","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:32.740157Z","level":"error","event":"Created version '8' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:32.916862Z","level":"info","event":"[TRAIN] Model svc logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:32.917690Z","level":"info","event":"[TRAIN] svc - Accuracy: 0.8627, F1-macro: 0.8298","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:33.058908Z","level":"info","event":"🏃 View run bn2_svc at: http://mlflow:5000/#/experiments/1/runs/85961b23739f43f98dd1cadacd66a91d","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:33.060456Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:33.170998Z","level":"info","event":"[TRAIN] Training knn...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:41.292204Z","level":"error","event":"2025/09/30 18:11:41 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:48.457658Z","level":"error","event":"\u001b[31m2025/09/30 18:11:48 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.038789Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.179029Z","level":"error","event":"2025/09/30 18:11:49 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 9","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.181381Z","level":"error","event":"Created version '9' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.347195Z","level":"info","event":"[TRAIN] Model knn logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.347814Z","level":"info","event":"[TRAIN] knn - Accuracy: 0.8118, F1-macro: 0.7861","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.398625Z","level":"info","event":"🏃 View run bn2_knn at: http://mlflow:5000/#/experiments/1/runs/be534655ceb84c658a880a49a28cb777","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.399191Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.487056Z","level":"info","event":"[TRAIN] Training adaboost...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.618973Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:49.619688Z","level":"error","event":"  warnings.warn(","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.911649Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.912177Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.914820Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.915406Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.916395Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:50.916829Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:11:58.798977Z","level":"error","event":"2025/09/30 18:11:58 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:12:06.806600Z","level":"error","event":"\u001b[31m2025/09/30 18:12:06 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:12:07.494266Z","level":"error","event":"Registered model 'CovertypeClassifier' already exists. Creating a new version of this model...","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:12:07.733241Z","level":"error","event":"2025/09/30 18:12:07 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 10","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:12:07.739311Z","level":"error","event":"Created version '10' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T18:12:08.026183Z","level":"info","event":"[TRAIN] Model adaboost logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:08.026986Z","level":"info","event":"[TRAIN] adaboost - Accuracy: 0.3647, F1-macro: 0.1765","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:08.145118Z","level":"info","event":"🏃 View run bn2_adaboost at: http://mlflow:5000/#/experiments/1/runs/2ea0f85808574ef49a312a6783c2ddf1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:08.147290Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.099005Z","level":"info","event":"🏃 View run bn{batch_number}_model_comparison at: http://mlflow:5000/#/experiments/1/runs/72eeaa2a51634334a935b1639b036478","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.099526Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.185602Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.187805Z","level":"info","event":"[METRICS] Model Performance Summary:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.193229Z","level":"info","event":"   model  accuracy  f1_macro  train_size  test_size","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.193925Z","level":"info","event":"      rf  0.945098  0.932233        1018        255","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.194462Z","level":"info","event":"     svc  0.862745  0.829832        1018        255","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.194977Z","level":"info","event":"     knn  0.811765  0.786126        1018        255","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.195437Z","level":"info","event":"  logreg  0.807843  0.766924        1018        255","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.195965Z","level":"info","event":"adaboost  0.364706  0.176511        1018        255","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.196394Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.196810Z","level":"info","event":"[BEST] rf (f1_macro=0.9322)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T18:12:09.198586","level":"info","event":"Done. Returned value was: {'best_model': 'rf', 'best_f1_score': 0.9322333611807297, 'total_models_trained': 5, 'metrics': [{'model': 'rf', 'accuracy': 0.9450980392156862, 'f1_macro': 0.9322333611807297, 'train_size': 1018, 'test_size': 255}, {'model': 'svc', 'accuracy': 0.8627450980392157, 'f1_macro': 0.829831582333627, 'train_size': 1018, 'test_size': 255}, {'model': 'knn', 'accuracy': 0.8117647058823529, 'f1_macro': 0.7861264191667005, 'train_size': 1018, 'test_size': 255}, {'model': 'logreg', 'accuracy': 0.807843137254902, 'f1_macro': 0.7669242508091428, 'train_size': 1018, 'test_size': 255}, {'model': 'adaboost', 'accuracy': 0.36470588235294116, 'f1_macro': 0.1765107212475633, 'train_size': 1018, 'test_size': 255}]}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-30T18:12:09.199180","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01999bd0-ed99-7b14-aecd-06c23b5b96b5'), task_id='train_covertype_models', dag_id='covertype_mysql_mlflow_train_models', run_id='manual__2025-09-30T18:09:44.777647+00:00', try_number=1, map_index=-1, hostname='c43f14dd3ede', context_carrier={}, task=<Task(PythonOperator): train_covertype_models>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 30, 18, 10, 21, 777289, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/covertype_mysql_mlflow_train_models/runs/manual__2025-09-30T18%3A09%3A44.777647%2B00%3A00/tasks/train_covertype_models?try_number=1')","logger":"task"}
