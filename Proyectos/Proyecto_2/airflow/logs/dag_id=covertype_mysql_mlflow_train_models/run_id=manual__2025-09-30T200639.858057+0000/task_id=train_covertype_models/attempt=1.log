{"timestamp":"2025-09-30T20:07:46.775903","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-30T20:07:46.776987","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ETL_Training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-30T20:07:52.381409Z","level":"info","event":"[INFO] batch_number from context: 1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.444752Z","level":"error","event":"2025/09/30 20:07:54 INFO mlflow.tracking.fluent: Experiment with name 'covertype_classification' does not exist. Creating a new experiment.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.623547","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:54.901992","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-09-30T20:07:54.908430","level":"info","event":"Connection Retrieved 'mysql_trn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-30T20:07:54.908848","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T20:07:54.942805","level":"warning","event":"/opt/airflow/dags/ETL_Training.py:252: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:54.955908Z","level":"info","event":"[TRAIN] Loaded 217 samples from covertype_clean","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.962505Z","level":"info","event":"[TRAIN] Features shape: (217, 12)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.969200Z","level":"info","event":"[TRAIN] Target distribution:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.969857Z","level":"info","event":"cover_type","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.970440Z","level":"info","event":"0    11","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.971035Z","level":"info","event":"1     7","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.971572Z","level":"info","event":"2    53","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.972078Z","level":"info","event":"3    60","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.974353Z","level":"info","event":"4    22","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.976791Z","level":"info","event":"5    64","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.977546Z","level":"info","event":"Name: count, dtype: int64","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:54.981479Z","level":"info","event":"[TRAIN] Training logreg...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:57.680436","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:57.695552","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:57.701716","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:08:06.374807Z","level":"error","event":"2025/09/30 20:08:06 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:26.032034Z","level":"error","event":"\u001b[31m2025/09/30 20:08:26 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:28.664465Z","level":"info","event":"[TRAIN] Model logreg logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:28.665253Z","level":"info","event":"[TRAIN] logreg - Accuracy: 0.5455, F1-macro: 0.5213, Run ID: de7f64b14aeb4c3fabfced6e32fe3be1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:28.813078Z","level":"info","event":"🏃 View run bn1_logreg at: http://mlflow:5000/#/experiments/1/runs/de7f64b14aeb4c3fabfced6e32fe3be1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:28.813860Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:28.946983Z","level":"info","event":"[TRAIN] Training rf...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.940437Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.943005Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.950205Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.952510Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.955210Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:30.956106Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:38.023846Z","level":"error","event":"2025/09/30 20:08:38 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.039317Z","level":"error","event":"\u001b[31m2025/09/30 20:08:47 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.642643Z","level":"info","event":"[TRAIN] Model rf logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.643273Z","level":"info","event":"[TRAIN] rf - Accuracy: 0.5909, F1-macro: 0.5486, Run ID: 007e1f7efdc44b2bb6f83e933e644476","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.702806Z","level":"info","event":"🏃 View run bn1_rf at: http://mlflow:5000/#/experiments/1/runs/007e1f7efdc44b2bb6f83e933e644476","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.703331Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:47.800554Z","level":"info","event":"[TRAIN] Training svc...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.137489Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.138193Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.159133Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.159617Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.160174Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:49.160664Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:08:56.600684Z","level":"error","event":"2025/09/30 20:08:56 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.181421Z","level":"error","event":"\u001b[31m2025/09/30 20:09:08 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.766455Z","level":"info","event":"[TRAIN] Model svc logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.767171Z","level":"info","event":"[TRAIN] svc - Accuracy: 0.6136, F1-macro: 0.5417, Run ID: 6f0832ae762b4572a9a7fd7d0fdc37f4","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.873124Z","level":"info","event":"🏃 View run bn1_svc at: http://mlflow:5000/#/experiments/1/runs/6f0832ae762b4572a9a7fd7d0fdc37f4","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.873802Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:08.973489Z","level":"info","event":"[TRAIN] Training knn...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:17.668688Z","level":"error","event":"2025/09/30 20:09:17 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:31.795235Z","level":"error","event":"\u001b[31m2025/09/30 20:09:31 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:34.712474Z","level":"info","event":"[TRAIN] Model knn logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:34.713204Z","level":"info","event":"[TRAIN] knn - Accuracy: 0.6136, F1-macro: 0.5363, Run ID: dcc64e1c3eba4d509e1f14bd26a5bef5","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:34.907341Z","level":"info","event":"🏃 View run bn1_knn at: http://mlflow:5000/#/experiments/1/runs/dcc64e1c3eba4d509e1f14bd26a5bef5","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:34.908347Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:35.136739Z","level":"info","event":"[TRAIN] Training adaboost...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:09:35.385936Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:35.402059Z","level":"error","event":"  warnings.warn(","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.814586Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.815110Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.823728Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.824478Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.829129Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:38.829806Z","level":"error","event":"  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:09:52.637436Z","level":"error","event":"2025/09/30 20:09:52 WARNING mlflow.models.model: `artifact_path` is deprecated. Please use `name` instead.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:01.181135Z","level":"error","event":"\u001b[31m2025/09/30 20:10:01 WARNING mlflow.models.model: Model logged without a signature and input example. Please set `input_example` parameter when logging the model to auto infer the model signature.\u001b[0m","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:02.129126Z","level":"info","event":"[TRAIN] Model adaboost logged to MLflow successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:02.129952Z","level":"info","event":"[TRAIN] adaboost - Accuracy: 0.5227, F1-macro: 0.3294, Run ID: bde9e9d059c348a1bae399dd35102824","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:02.246797Z","level":"info","event":"🏃 View run bn1_adaboost at: http://mlflow:5000/#/experiments/1/runs/bde9e9d059c348a1bae399dd35102824","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:02.247400Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:02.644220Z","level":"error","event":"Successfully registered model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:03.043053Z","level":"error","event":"2025/09/30 20:10:03 WARNING mlflow.tracking._model_registry.fluent: Run with id 007e1f7efdc44b2bb6f83e933e644476 has no artifacts at artifact path 'model', registering model based on models:/m-4b06b1b6e3d648c3b5a03d367f71fcca instead","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:03.498049Z","level":"error","event":"2025/09/30 20:10:03 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: CovertypeClassifier, version 1","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:03.500205Z","level":"error","event":"Created version '1' of model 'CovertypeClassifier'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-30T20:10:03.713573Z","level":"info","event":"[REGISTRY] Best model 'rf' registered as version 1 (Run ID: 007e1f7efdc44b2bb6f83e933e644476)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.059403Z","level":"info","event":"🏃 View run bn1_model_comparison at: http://mlflow:5000/#/experiments/1/runs/65080ce9e11c42c3bce0e9974e91b40b","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.060406Z","level":"info","event":"🧪 View experiment at: http://mlflow:5000/#/experiments/1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.178426Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.179041Z","level":"info","event":"[METRICS] Model Performance Summary:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.190744Z","level":"info","event":"   model  accuracy  f1_macro  train_size  test_size                           run_id","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.191352Z","level":"info","event":"      rf  0.590909  0.548617         173         44 007e1f7efdc44b2bb6f83e933e644476","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.191842Z","level":"info","event":"     svc  0.613636  0.541667         173         44 6f0832ae762b4572a9a7fd7d0fdc37f4","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.197524Z","level":"info","event":"     knn  0.613636  0.536349         173         44 dcc64e1c3eba4d509e1f14bd26a5bef5","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.198270Z","level":"info","event":"  logreg  0.545455  0.521295         173         44 de7f64b14aeb4c3fabfced6e32fe3be1","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.199094Z","level":"info","event":"adaboost  0.522727  0.329382         173         44 bde9e9d059c348a1bae399dd35102824","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.200146Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.200803Z","level":"info","event":"[BEST] rf (f1_macro=0.5486) registered to model registry","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.201567Z","level":"info","event":"[BEST] Run ID: 007e1f7efdc44b2bb6f83e933e644476","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:10:05.199093","level":"info","event":"Done. Returned value was: {'best_model': 'rf', 'best_f1_score': 0.5486166007905139, 'best_run_id': '007e1f7efdc44b2bb6f83e933e644476', 'total_models_trained': 5, 'metrics': [{'model': 'rf', 'accuracy': 0.5909090909090909, 'f1_macro': 0.5486166007905139, 'train_size': 173, 'test_size': 44, 'run_id': '007e1f7efdc44b2bb6f83e933e644476'}, {'model': 'svc', 'accuracy': 0.6136363636363636, 'f1_macro': 0.5416666666666666, 'train_size': 173, 'test_size': 44, 'run_id': '6f0832ae762b4572a9a7fd7d0fdc37f4'}, {'model': 'knn', 'accuracy': 0.6136363636363636, 'f1_macro': 0.5363492063492062, 'train_size': 173, 'test_size': 44, 'run_id': 'dcc64e1c3eba4d509e1f14bd26a5bef5'}, {'model': 'logreg', 'accuracy': 0.5454545454545454, 'f1_macro': 0.5212950012950013, 'train_size': 173, 'test_size': 44, 'run_id': 'de7f64b14aeb4c3fabfced6e32fe3be1'}, {'model': 'adaboost', 'accuracy': 0.5227272727272727, 'f1_macro': 0.3293815987933635, 'train_size': 173, 'test_size': 44, 'run_id': 'bde9e9d059c348a1bae399dd35102824'}]}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-30T20:10:05.200008","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01999c3b-f826-746e-9af2-e0b41fe018af'), task_id='train_covertype_models', dag_id='covertype_mysql_mlflow_train_models', run_id='manual__2025-09-30T20:06:39.858057+00:00', try_number=1, map_index=-1, hostname='5b92881ec6ca', context_carrier={}, task=<Task(PythonOperator): train_covertype_models>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 30, 20, 7, 46, 495448, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/covertype_mysql_mlflow_train_models/runs/manual__2025-09-30T20%3A06%3A39.858057%2B00%3A00/tasks/train_covertype_models?try_number=1')","logger":"task"}
