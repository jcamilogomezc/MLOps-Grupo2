{"timestamp":"2025-09-30T20:07:33.821162","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-30T20:07:33.822228","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ETL_Training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-30T20:07:44.124507","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:44.498352","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-09-30T20:07:44.511507","level":"info","event":"Connection Retrieved 'mysql_trn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-30T20:07:44.512338","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T20:07:44.636871","level":"warning","event":"/opt/airflow/dags/ETL_Training.py:118: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-09-30T20:07:44.738411Z","level":"info","event":"[PREPROCESS] Raw data loaded: 228 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.792928Z","level":"info","event":"[PREPROCESS] Removed 10 outliers from elevation","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.805658Z","level":"info","event":"[PREPROCESS] Removed 1 outliers from horizontal_distance_to_roadways","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.809997Z","level":"info","event":"[PREPROCESS] Outlier removal: 228 -> 217 rows (11 removed)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.841122Z","level":"info","event":"[PREPROCESS] Final data quality summary:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.841968Z","level":"info","event":"  - Total rows: 217","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.843377Z","level":"info","event":"  - Missing values: 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:44.888710Z","level":"info","event":"  - Duplicate rows: 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-30T20:07:45.250371","level":"info","event":"Done loading. Loaded a total of 217 rows into covertype_clean","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-09-30T20:07:45.252422","level":"info","event":"Done. Returned value was: Data cleaning completed. 217 clean records processed.","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-30T20:07:45.253095","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01999c3b-f825-76ee-a6cf-78de2720168f'), task_id='clean_covertype_data', dag_id='covertype_mysql_mlflow_train_models', run_id='manual__2025-09-30T20:06:39.858057+00:00', try_number=1, map_index=-1, hostname='5b92881ec6ca', context_carrier={}, task=<Task(PythonOperator): clean_covertype_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 30, 20, 7, 33, 570558, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/covertype_mysql_mlflow_train_models/runs/manual__2025-09-30T20%3A06%3A39.858057%2B00%3A00/tasks/clean_covertype_data?try_number=1')","logger":"task"}
{"timestamp":"2025-09-30T20:07:45.255602Z","level":"info","event":"[PREPROCESS] Clean rows inserted: 217","chan":"stdout","logger":"task"}
